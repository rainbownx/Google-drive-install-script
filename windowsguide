This tutorial will guide you through setting up your Windows environment to use the download-gdrive.py Python script. This script is excellent for reliably downloading files from Google Drive, especially large files that might trigger browser warnings or direct download issues.
Table of Contents

    What You'll Need
    Step 1: Install Git for Windows
    Step 2: Install Python 3 for Windows
    Step 3: Install the requests Python Library
    Step 4: Get the download-gdrive.py Script
    Step 5: How to Use the Script
    Troubleshooting Common Issues

1. What You'll Need

Before you start, make sure you have:

    Windows 10 or 11 (other versions may work but are not officially supported here).
    An active internet connection.

We'll be installing three main components:

    Git for Windows: This includes Git Bash, a command-line environment that helps you interact with Git repositories.
    Python 3: The programming language required to run the script.
    requests library: A specific Python library that the script uses for web requests.

2. Step 1: Install Git for Windows

Git is a version control system, but "Git for Windows" also provides a powerful command-line environment called Git Bash, which is great for running scripts like download-gdrive.py.

    Download Git for Windows:
    Go to the official Git website: https://git-scm.com/download/win
    The download should start automatically for the latest stable version.

    Run the Installer:
        Locate the downloaded .exe file (e.g., Git-2.xx.x-64-bit.exe) and run it.
        Follow the on-screen prompts. The default options are usually fine for most users.
            When it asks "Adjusting your PATH environment", choose the recommended option: "Git from the command line and also from 3rd-party software" (this is important!).
            For "Choosing the default terminal emulator", "Use MinTTY (the default Git Bash terminal)" is a good choice.
            You can generally click "Next" through the remaining screens, accepting the defaults.

    Verify Installation:
        After installation, open the Start Menu and search for Git Bash. Click to open it.
        In the Git Bash window, type:
        Bash

        git --version

        You should see the Git version number, confirming a successful installation.

3. Step 2: Install Python 3 for Windows

Python is necessary to run the download-gdrive.py script.

    Download Python 3:
    Go to the official Python website: https://www.python.org/downloads/windows/
    Download the latest stable version for Windows (e.g., "Windows installer (64-bit)").

    Run the Installer:
        Locate the downloaded .exe file and run it.
        CRITICAL STEP: On the very first screen of the installer, make sure you check the box that says: "Add python.exe to PATH" This is crucial for being able to run python and pip commands directly from any terminal.
        Then, click "Install Now" (recommended).
        Follow any remaining prompts to complete the installation.

    Verify Installation:
        Close and re-open your Git Bash window (or Command Prompt) to ensure the PATH changes take effect.
        Type the following commands:
        Bash

        python --version
        pip --version

        You should see the Python 3 version number (e.g., Python 3.10.x) and the pip version number. If you get "command not found" errors, you may need to restart your computer or manually add Python to your PATH environment variables.

4. Step 3: Install the requests Python Library

The download-gdrive.py script uses the requests library to handle web requests.

    Open Git Bash (or Command Prompt).
    Type the following command and press Enter:
    Bash

    pip install requests

    You should see output indicating that requests and its dependencies are being downloaded and installed.

5. Step 4: Get the download-gdrive.py Script

Now that your environment is set up, you can easily get the script using Git.

    Open Git Bash.

    Choose a directory: Navigate to a folder where you'd like to store the script (e.g., your Downloads folder, or a new Scripts folder in your user directory).
        To go to your Downloads folder:
        Bash

cd ~/Downloads/

To create a new Scripts folder in your home directory and go into it:
Bash

    mkdir ~/Scripts/
    cd ~/Scripts/

Clone the script's repository:
Bash

git clone https://github.com/rainbownx/Google-drive-install-script.git

This will create a new folder named Google-drive-install-script in your current directory.

Navigate into the script's directory:
Bash

    cd Google-drive-install-script

    Now you are in the directory where download-gdrive.py is located.

6. Step 5: How to Use the Script

You're ready to download files!

Syntax:
Bash

python download-gdrive.py "YOUR_GOOGLE_DRIVE_LINK" [destination_path_or_filename]

    "YOUR_GOOGLE_DRIVE_LINK": This is the shareable link to the Google Drive file you want to download. Always enclose the link in double quotes (") to prevent issues with special characters in the URL. Ensure the Google Drive file is set to "Anyone with the link" can view/download.

    [destination_path_or_filename]: This argument is optional. It specifies where to save the downloaded file.
        If omitted: The file will be saved in the current directory (where you run the script from, i.e., Google-drive-install-script/) using its original filename as inferred from Google Drive.
        If it's an existing directory (e.g., C:/Users/YourName/Downloads/): The file will be saved inside that directory, using its original Google Drive filename.
        If it's a full file path (e.g., C:/Temp/my_document.pdf): The file will be saved to that exact path with that filename.
        If it's just a filename (e.g., my_document.pdf): The file will be saved in the current directory with that specified filename.

Examples:

Assume you are in the Google-drive-install-script directory in Git Bash.
Example 1: Download a file (like the SimpleArchISO) to your Downloads folder

Let's use the SimpleArchISO file as an example. Its link is https://drive.google.com/file/d/1IcbAk4yFh9VodGMuYMKWUhMA6tBjUSfc/view?usp=sharing.
Bash

python download-gdrive.py "https://drive.google.com/file/d/1IcbAk4yFh9VodGMuYMKWUhMA6tBjUSfc/view?usp=sharing" ~/Downloads/simplearch.iso

This will save the simplearch.iso file into your Windows Downloads folder.
Example 2: Download a file to the current directory (where the script is)
Bash

python download-gdrive.py "https://drive.google.com/file/d/YOUR_OTHER_FILE_ID/view?usp=sharing"

The file will be saved in the Google-drive-install-script directory with its original name.
Example 3: Download a file to a specific folder on your C: drive
Bash

python download-gdrive.py "https://drive.google.com/file/d/YOUR_OTHER_FILE_ID/view?usp=sharing" /c/MyDocs/ProjectFiles/

(Note: In Git Bash, Windows drive letters are accessed as /c/, /d/, etc.)
7. Troubleshooting Common Issues

    python: command not found or python is not recognized as an internal or external command:
    This means Python was not correctly added to your system's PATH.
        Solution: Re-run the Python installer and ensure "Add python.exe to PATH" is checked. You might also need to restart your computer.

    pip: command not found or pip is not recognized as an internal or external command:
    Similar to the Python error, pip might not be in your PATH.
        Solution: Close and re-open Git Bash. If it persists, re-run the Python installer and ensure "Add python.exe to PATH" is checked.

    ModuleNotFoundError: No module named 'requests':
    This means the requests Python library was not installed correctly.
        Solution: Go back to Step 3 and run pip install requests again. Ensure you have an active internet connection.

    python: can't open file 'download-gdrive.py': [Errno 2] No such file or directory:
        You are not in the correct directory. Make sure you have used cd Google-drive-install-script to navigate into the folder where the script is located.
        You might have typed the filename incorrectly. Ensure it's download-gdrive.py (with a hyphen -).

    Error: Could not extract file ID from the provided Google Drive link. or Error downloading file. Status code: 403 (Forbidden) or 404 (Not Found):
        The Google Drive link is incorrect or the file is not publicly shared. Ensure the file on Google Drive is set to "Anyone with the link" can view/download.
        Double-check that you've correctly enclosed the entire link in double quotes.

    Error writing file... Permission denied:
        You are trying to save the file to a protected system folder where your user account doesn't have write permissions (e.g., the root of your C: drive, or Program Files).
        Solution: Try saving the file to your Downloads folder (e.g., ~/Downloads/your_file.ext) or another folder within your user directory.
